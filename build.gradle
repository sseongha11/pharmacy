plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'groovy'
}

group = 'com.recommendation'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveFileName = 'app.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://github.com/seruco/base62
    implementation 'io.seruco.encoding:base62:0.1.3'

    // testcontainers
    testImplementation 'org.testcontainers:spock:1.19.8'
    testImplementation 'org.testcontainers:mariadb:1.19.8'

    // Spock
    testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'

    // https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy
    testImplementation('net.bytebuddy:byte-buddy:1.12.10')

    // spring-retry
    implementation 'org.springframework.retry:spring-retry'

    // mockWebServer
    testImplementation('com.squareup.okhttp3:okhttp:5.0.0-alpha.14')
    testImplementation('com.squareup.okhttp3:mockwebserver:5.0.0-alpha.14')
}

tasks.named('test') {
    useJUnitPlatform()
}

// $ ./gradlew clean build -PKAKAO_REST_API_KEY={api key value} Create a JAR file through the commands through the overall test and build process.
processTestResources {
    boolean hasProperty = project.hasProperty("KAKAO_REST_API_KEY")
    System.out.println("Set kakao rest api key: $hasProperty")
    filesMatching('**/application.yml') {
        expand(project.properties)
    }
}
